# 3. В строке найти и заменить одну подстроку на другую.
# Если одинаковых подстрок несколько, заменить все.
# Пример строки: str = "дерево, коробка, тумба, лампа, стол, кошка, собака, гусь, хрюша, коробка, лампа, кошка"

# Создаем строку
string = "дерево, коробка, тумба, лампа, стол, кошка, собака, гусь, хрюша, коробка, лампа, кошка"

# Выводим всю строку для пользователя
print("Текущая строка:\n {}".format(string))

# Объявляем переменную old_word для хранения заменяемого слова
# строчный метод lower() позволит оперировать словами при неправильно введенном регистре, при условии
# что первоначальный список состоит из слов с малым регистром
old_word = input("Выберите слово для удаления:\n").lower()
# Объявляем переменную new_word для хранения слова на замену
new_word = input("Выберите слово для добавления:\n").lower()
# Определяем длину заменяемого слова
len_old_word = len(old_word)


# Запускаем цикл
while True:
    # Если строчный метод find возвращает значение больше 0 (подстроки есть в строке)
    if string.find(old_word) > 0:
        # Записываем номер первого вхождения слова в общей строке в переменную len_word
        len_word = string.find(old_word)
        # Пересобираем строку по срезам, заменяя старое слово на новое
        string = string[:len_word] + new_word + string[len_word+len_old_word:]
    # Иначе завершаем цикл (подстрок нет в строке)
    else: break

# Выводим измененную строку
print("Строка сейчас:\n {}".format(string))

# Тестил корректность отработки кода путем замены существующих слов в строке и несуществующих